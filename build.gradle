plugins {
    id 'com.avast.gradle.docker-compose' version '0.6.6'
    id 'org.unbroken-dome.test-sets' version '1.4.2'
}

group 'io.bitgrillr'
version '1.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

testSets {
    integrationTest
    dockerTest
}

configurations {
    library
}

dependencies {
    library group: 'javax.json', name: 'javax.json-api', version: '1.1+'
    library group: 'org.glassfish', name: 'javax.json', version: '1.1+'
    library 'com.spotify:docker-client:8.10+'
    compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: '17.3+'
    testCompile group: 'cd.go.plugin', name: 'go-plugin-api', version: '17.3+'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.11+'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.0-beta.5'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.0-beta.5'
    integrationTestCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5+'
    integrationTestCompile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5+'

    configurations.compile.extendsFrom(configurations.library)
}

// build

processResources {
    filesNotMatching('**/task.template.html') { file -> file.expand project.properties }
}

jar {
    into('lib') {
        from configurations.library
    }
}

// unit tests

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test {
    jacoco {
        includes = ['io.bitgrillr.*']
    }
}

task jacocoCodeclimate(type: Copy) {
    from 'build/reports/jacoco/test/jacocoTestReport.xml'
    into './'
    rename { fileName -> fileName.replace("jacocoTestReport.xml", "jacoco.xml") }
    filter { line -> line.replaceAll("io/", "src/main/java/io/") }
}

check.dependsOn jacocoTestReport
jacocoTestReport.mustRunAfter test
check.dependsOn jacocoCodeclimate
jacocoCodeclimate.mustRunAfter jacocoTestReport

// docker tests

dockerTest {
    jacoco {
        enabled false
    }
    def dockerHost = System.getenv "DOCKER_HOST"
    if (dockerHost == null || dockerHost.isEmpty()) {
        dockerHost = "unix:///var/run/docker.sock"
    } else {
        // docker-client does not like tcp protocol
        if (dockerHost.startsWith('tcp')) {
            dockerHost = dockerHost.replaceFirst 'tcp', 'http'
        }
    }
    systemProperty 'gocddockerexecplugin.dockerhost', dockerHost
}

check.dependsOn dockerTest
dockerTest.mustRunAfter test

// integration tests

processIntegrationTestResources {
    filesNotMatching('**/passwd') { file -> file.expand project.properties }
    filesMatching(['**/cruise-config.xml', '**/passwd']) { file -> file.mode = 0777 }
}

dockerCompose {
    useComposeFiles = ['build/resources/integrationTest/docker-compose.yml']
}

integrationTest {
    jacoco {
        enabled false
    }
}

dockerCompose.isRequiredBy integrationTest
composeUp.dependsOn assemble
composeUp.dependsOn processIntegrationTestResources
check.dependsOn integrationTest
integrationTest.mustRunAfter dockerTest
